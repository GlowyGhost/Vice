name: Build Full App

on:
  workflow_dispatch:

jobs:
  flutter:
    name: Build Flutter Web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.6"
          channel: "stable"

      - name: Build Flutter Web
        run: |
          flutter config --no-analytics
          flutter config --no-cli-animations
          cd flutter
          flutter build web --release --no-wasm-dry-run

      - name: Upload Flutter build
        uses: actions/upload-artifact@v4
        with:
          name: flutter-build
          path: flutter/build/web
  
  debug:
    name: Build Debug App
    runs-on: ${{ matrix.os }}
    needs: [flutter]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Linux dependencies for Tauri
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            libglib2.0-dev \
            libwebkit2gtk-4.1-dev \
            libasound2-dev \
            libpulse-dev

      - name: Download Flutter build
        uses: actions/download-artifact@v4
        with:
          name: flutter-build
          path: flutter/build/web

      - name: Install frontend deps if package.json exists
        shell: bash
        run: |
          if [ -f src-tauri/package.json ]; then
            cd src-tauri
            npm install
          else
            echo "No package.json found, skipping npm install"
          fi

      - name: Install C++ compiler (Linux)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: sudo apt update && sudo apt install -y build-essential

      - name: Install C/C++ compiler (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          choco install mingw -y
          refreshenv

      - name: Build Tauri app
        shell: bash
        run: |
          cd src-tauri
          cargo build

      - name: Rename Files (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          cd src-tauri/target/debug
          Rename-Item -Path Vice.exe -NewName Vice-debug.exe

      - name: Rename Files (Linux)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          cd src-tauri/target/debug
          mv Vice Vice-debug

      - name: Upload debug build
        uses: actions/upload-artifact@v4
        with:
          name: debug-${{ matrix.os }}
          path: src-tauri/target/debug/*.exe

  app:
    name: Build Tauri App
    runs-on: ${{ matrix.os }}
    needs: [flutter]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Linux dependencies for Tauri
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            libglib2.0-dev \
            libwebkit2gtk-4.1-dev \
            libasound2-dev \
            libpulse-dev

      - name: Download Flutter build
        uses: actions/download-artifact@v4
        with:
          name: flutter-build
          path: flutter/build/web

      - name: Install frontend deps if package.json exists
        shell: bash
        run: |
          if [ -f src-tauri/package.json ]; then
            cd src-tauri
            npm install
          else
            echo "No package.json found, skipping npm install"
          fi

      - name: Install C++ compiler (Linux)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: sudo apt update && sudo apt install -y build-essential

      - name: Install C/C++ compiler (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          choco install mingw -y
          refreshenv

      - name: Build Tauri app
        shell: bash
        run: |
          cd src-tauri
          cargo build --release

      - name: Upload release build
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}
          path: src-tauri/target/release/*.exe
  
  zip:
    name: Build Tauri App
    runs-on: ${{ matrix.os }}
    needs: [debug, app]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Linux dependencies for Tauri
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            zip
          
      - name: Download Debug
        uses: actions/download-artifact@v4
        with:
          name: debug-${{ matrix.os }}
          path: temp

      - name: Download Release
        uses: actions/download-artifact@v4
        with:
          name: release-${{ matrix.os }}
          path: temp

      - name: Package Release Zip (Linux)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          cd temp
          zip -j linux.zip Vice Vice-debug ../LICENSE

      - name: Package Release Zip (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          cd src-tauri/target/release
          Compress-Archive -Path Vice.exe, Vice-debug.exe, ../LICENSE -DestinationPath windows.zip -Force

      - name: Upload final zip
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}
          path: src-tauri/target/release/*.zip